spring:
  application.name: casa-service
  dataSource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOSTNAME:localhost}:${DB_PORT:3307}/${DB_NAME:casa_db}
    username: ${DB_USERNAME:user}
    password: ${DB_PASSWORD:user}
  flyway:
    enabled: true
    locations: classpath:db/migration
  # use JWT because using keycloak as OIDC, and it only natively support JWT
  security:
    oauth2:
      resourceserver:
        jwt:
          # To validate iss claim, this MUST match the public-facing URL from KC_HOSTNAME
          # Addressing mess of accessing keycloak in local machine vs cluster
          issuer-uri: ${AUTH_SERVER_K8S_SERVICE_URI:http://keycloak.local:8081}/realms/${APP_REALM:showcase}
          # 2. For FETCHING the security keys from WITHIN the cluster.
          #    This MUST use the internal Kubernetes service name.
          jwk-set-uri: ${AUTH_SERVER_K8S_SERVICE_URI:http://keycloak:8080}/realms/${APP_REALM:showcase}/protocol/openid-connect/certs


logging:
  level:
    root: INFO
    sun: INFO
    javax.management: INFO

management:
  server.port: 9090
  endpoint:
    health.probes.enabled: true
  health:
    livenessState.enabled: true
    readinessState.enabled: true